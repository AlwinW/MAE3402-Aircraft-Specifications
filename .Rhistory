mutate(Advanced_Composites = General_Aviation * Fudge_Factors)
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
cbind(., Advanced_Composites = General_Aviation * Fudge_Factors)
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
cbind(., Advanced_Composites = Weights * Fudge_Factors)
Weights
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
cbind(., Advanced_Composites = t(Weights * Fudge_Factors))
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
cbind(., Advanced_Composites = t(Weights * Fudge_Factors))
Weights
?sum
sum(Weights)
sum(Weights[,2:3])
Total_Weights = c("Total", sum(Weights[,2]), sum(Weights[,3]))
Total_Weights
Weights <- rbind(Weights, Total_Weights)
Weights
rownames(Weights) <- NULL
Weights
Weights_SI <- Weights / kg_to_lb
Weights_SI <- cbind(Weights[,1], Weights[,2:3]/ kg_to_lb)
Weights[,1]
Weights[,2:3]/ kg_to_lb
Weights
Weights[,2:3]
Weights[,2:3]*2
Weights_SI <- cbind(Weights[,1], Weights[,2]/ kg_to_lb, Weights[,3]/ kg_to_lb)
kg_to_lb
Weights[,2]/ kg_to_lb
Weights_SI <- Weights %>%
mutate(General_Aviation = General_Aviation/kg_to_lb,
Advanced_Composites = Advanced_Composites/kg_to_lb)
Weights_SI <- Weights %>%
mutate(General_Aviation = General_Aviation/kg_to_lb,
Advanced_Composites = Advanced_Composites/kg_to_lb)
Weights_SI <- Weights
Weights_SI <- Weights %>%
mutate(General_Aviation = General_Aviation,
Advanced_Composites = Advanced_Composites)
Weights$General_Aviation
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
t(Weights * Fudge_Factors)
Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(cbind(., Advanced_Composites = t(Weights * Fudge_Factors)))
Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(., Advanced_Composites = t(Weights * Fudge_Factors))
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(., Advanced_Composites = t(Weights * Fudge_Factors))
Total_Weights = c("Total", sum(Weights[,2]), sum(Weights[,3]))
Weights <- rbind(Weights, Total_Weights)
Weights
Total_Weights
Total_Weights = data.frame("Total", sum(Weights[,2]), sum(Weights[,3]))
Total_Weights = data.frame(
Part = "Total",
General_Aviation = sum(Weights[, 2]),
Advanced_Composites = sum(Weights[, 3]))
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(., Advanced_Composites = t(Weights * Fudge_Factors))
Total_Weights = data.frame(
Part = "Total",
General_Aviation = sum(Weights[, 2]),
Advanced_Composites = sum(Weights[, 3]))
Total_Weights
Weights <- rbind(Weights, Total_Weights)
Weights
rownames(Weights) <- NULL
Weights
Weights*2
Weights[,2:3]*2
Weights_SI <- data.frame(Weights[,1], Weights[,2:3]/kg_to_lb)
Weights_SI
Weights_SI <- data.frame(Part = Weights[,1], Weights[,2:3]/kg_to_lb)
Weights_SI
Weights[,2:3]/Total_Weights[,2:3]
Weights_Fraction <- data.frame(Part = Weights[,1], Weights[,2]/Total_Weights[2], Weights[,3]/Total_Weights[3])
Weights_Fraction
Weights[,2]/Total_Weights[2]
Weights[,2]
Total_Weights[2]
Weights[,2]/as.double(Total_Weights[2])
Weights_Fraction <- data.frame(
Part = Weights[,1],
eights[,2]/as.double(Total_Weights[2]),
eights[,3]/as.double(Total_Weights[3]))
Weights_Fraction <- data.frame(
Part = Weights[,1],
Weights[,2]/as.double(Total_Weights[2]),
Weights[,3]/as.double(Total_Weights[3]))
Weights_Fraction
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
if (composite == TRUE)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
else
Fudge_Factors = rep(1, 14)
Weight_Estimate <- function(WS, PS, W_dg, Composite = TRUE) {
# Directly Calculated from the Inputs
S = W_dg*9.8065 / WS       # m^2
S_wing = S/(ft_to_m^2)  # ft^2
P = PW * W_dg * 9.8065     # kW
# Engine sizing
W_en = P/(2 * 260e3) * 50 * kg_to_lb # lb, each engine
# Tail sizing (FIX UP FOR VALUES TO MATCH DANIEL'S VALUES)
S_HT = (0.07 * b_wing * S_wing)/L_t  # ft^2
AR_HT = 5.2
S_VT = (0.8 * 0.95 / ft_to_m * S_wing)/L_t * 2  # ft^2
AR_VT  = 1.76
# Cd0 estimate (FIX UP FOR WETTED VS THEORETICAL)
S_wet = S_Fuse + S_Eng + 2 * S_wing + 2 * S_HT + 2 * S_VT
Cd0 = 0.0045 * S_wet / S_wing
W_bat = (q_SI  * Cd0 / WS + K / q_SI * WS ) * BatteryFactor * 9.8065 / Etatotal * W_dg
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
if (composite == TRUE)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
else
Fudge_Factors = rep(1, 14)
W_est = sum(Weights*Fudge_Factors)/kg_to_lb
}
Weight_Estimate(WS, PS, W_dg)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
Weight_Estimate(WS, PS, W_dg, TRUE)
W_est
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
Weight_Estimate(WS, PS, W_dg, TRUE)
Weight_Estimate(WS, PS, W_dg, FALSE)
Working_SI <- data.frame(
S_wing = S,
P = P,
W_en = W_en / kg_to_lb,
S_HT = S_HT * (ft_to_m)^2,
AR_HT = AR_HT,
S_VT = S_VT * (ft_to_m)^2,
AR_VT = AR_VT,
S_wet = S_wet * (ft_to_m)^2,
Cd0 = Cd0,
W_bat = W_bat / kg_to_lb
)
Working_SI
S
S = W_dg/kg_to_lb*9.8065 / WS       # m^2
# Directly Calculated from the Inputs
S = W_dg/kg_to_lb*9.8065 / WS  # m^2
S_wing = S/(ft_to_m^2)         # ft^2
P = PW * W_dg * 9.8065         # kW
# Engine sizing
W_en = P/(2 * 260e3) * 50 * kg_to_lb # lb, each engine
# Tail sizing (FIX UP FOR VALUES TO MATCH DANIEL'S VALUES)
S_HT = (0.07 * b_wing * S_wing)/L_t  # ft^2
AR_HT = 5.2
S_VT = (0.8 * 0.95 / ft_to_m * S_wing)/L_t * 2  # ft^2
AR_VT  = 1.76
# Cd0 estimate (FIX UP FOR WETTED VS THEORETICAL)
S_wet = S_Fuse + S_Eng + 2 * S_wing + 2 * S_HT + 2 * S_VT
Cd0 = 0.0045 * S_wet / S_wing
W_bat = (q_SI  * Cd0 / WS + K / q_SI * WS ) * BatteryFactor * 9.8065 / Etatotal * W_dg
# Calculation summary
Working_SI <- data.frame(
S_wing = S,
P = P,
W_en = W_en / kg_to_lb,
S_HT = S_HT * (ft_to_m)^2,
AR_HT = AR_HT,
S_VT = S_VT * (ft_to_m)^2,
AR_VT = AR_VT,
S_wet = S_wet * (ft_to_m)^2,
Cd0 = Cd0,
W_bat = W_bat / kg_to_lb
)
# Raymer Weights Correlation
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
Working_SI
WS
W_dg
W_dg*0.45 / WS
W_dg_SI = 8000
# Directly Calculated from the Inputs
S = W_dg_SI*9.8065 / WS  # m^2
S_wing = S/(ft_to_m^2)         # ft^2
P = PW * W_dg_SI * 9.8065         # kW
W_dg_SI = W_dg*kg_to_lb        # lb
# Engine sizing
W_en = P/(2 * 260e3) * 50 * kg_to_lb # lb, each engine
# Tail sizing (FIX UP FOR VALUES TO MATCH DANIEL'S VALUES)
S_HT = (0.07 * b_wing * S_wing)/L_t  # ft^2
AR_HT = 5.2
S_VT = (0.8 * 0.95 / ft_to_m * S_wing)/L_t * 2  # ft^2
AR_VT  = 1.76
# Cd0 estimate (FIX UP FOR WETTED VS THEORETICAL)
S_wet = S_Fuse + S_Eng + 2 * S_wing + 2 * S_HT + 2 * S_VT
Cd0 = 0.0045 * S_wet / S_wing
W_bat = (q_SI  * Cd0 / WS + K / q_SI * WS ) * BatteryFactor * 9.8065 / Etatotal * W_dg
# Calculation summary
Working_SI <- data.frame(
S_wing = S,
P = P,
W_en = W_en / kg_to_lb,
S_HT = S_HT * (ft_to_m)^2,
AR_HT = AR_HT,
S_VT = S_VT * (ft_to_m)^2,
AR_VT = AR_VT,
S_wet = S_wet * (ft_to_m)^2,
Cd0 = Cd0,
W_bat = W_bat / kg_to_lb
)
# Raymer Weights Correlation
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
Working_SI
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
Weight_Estimate <- function(WS, PS, W_dg_SI, composite = TRUE)
Weight_Estimate(WS, PS, W_dg_SI, composite = TRUE)
Weight_Estimate <- function(WS, PS, W_dg_SI, composite = TRUE) {
# Directly Calculated from the Inputs
S = W_dg_SI*9.8065 / WS        # m^2
S_wing = S/(ft_to_m^2)         # ft^2
P = PW * W_dg_SI * 9.8065      # kW
W_dg = W_dg_SI*kg_to_lb        # lb
# Engine sizing
W_en = P/(2 * 260e3) * 50 * kg_to_lb # lb, each engine
# Tail sizing (FIX UP FOR VALUES TO MATCH DANIEL'S VALUES)
S_HT = (0.07 * b_wing * S_wing)/L_t  # ft^2
S_VT = (0.8 * 0.95 / ft_to_m * S_wing)/L_t * 2  # ft^2
# Cd0 estimate (FIX UP FOR WETTED VS THEORETICAL)
S_wet = S_Fuse + S_Eng + 2 * S_wing + 2 * S_HT + 2 * S_VT
Cd0 = 0.0045 * S_wet / S_wing
W_bat = (q_SI  * Cd0 / WS + K / q_SI * WS ) * BatteryFactor * 9.8065 / Etatotal * W_dg
# Calculation summary
Working_SI <- data.frame(
S_wing = S,
P = P,
W_en = W_en / kg_to_lb,
S_HT = S_HT * (ft_to_m)^2,
S_VT = S_VT * (ft_to_m)^2,
S_wet = S_wet * (ft_to_m)^2,
Cd0 = Cd0,
W_bat = W_bat / kg_to_lb
)
# Raymer Weights Correlation
Weights <- data.frame(
wing = ((0.036*S_wing^0.758)*W_bat^0.0035*((AR)^0.6)*(q^0.006)*(lambda^0.04)*((100*(t_c))^-0.3)*((N_z*W_dg)^0.49)),
htail = (0.016*(N_z*W_dg)^0.414)*(q^0.168)*(S_HT^0.896)*((100*(t_c))^-0.12)*(AR_HT)^0.043*(lambda^-0.02),
vtail = 0.073*((N_z*W_dg)^0.376)*q^0.122*(S_VT^0.873)*((100*t_c)^-0.49)*((AR_VT)^0.357)*lambda^0.039,
fuselage = 0.052*(S_Fuse^1.086)*((N_z*W_dg)^0.177)*(L_t^-0.051)*(L_D^-0.072)*(q^0.241),
lgmain = (0.095*(N_z*W_dg)^0.768)*(L_m^0.409),
lgnose = (0.125*(N_z*W_dg)^0.566)*(L_n^0.845),
powerplant = 2.575*(W_en^0.922)*2,
batteries = W_bat,
payload = 6*120*kg_to_lb,
controls = 0.053*L_Fuse^1.536*b_wing^0.371*(N_z*W_dg*10^-4)^0.8,
hydraulics = K_h*(W_Fuse^0.8)*(Mach^0.5),
avionics = 2.117*(W_uav)^0.933,
ac_antiice = (0.265*W_dg^0.52)*(6^0.68)*((2.117*(W_uav)^0.933)^0.17)*(Mach^0.08),
furnishings = 0.0582 * W_dg - 65
)
if (composite == TRUE)
Fudge_Factors = c(0.85, 0.83, 0.83, 0.90, 0.95, 0.95, 1, 1, 1, 1, 1, 1, 1, 1)
else
Fudge_Factors = rep(1, 14)
W_est = sum(Weights*Fudge_Factors)/kg_to_lb
return(list(W_est, Weights))
}
Weight_Estimate(WS, PS, W_dg_SI, composite = TRUE)
Weights = Weight_Estimate(WS, PS, W_dg_SI, composite = TRUE)
Weights
Weights = Weight_Estimate(WS, PS, W_dg_SI, composite = TRUE)[[2]]
Weights
Weights = Weight_Estimate(WS, PS, W_dg_SI, composite = TRUE)[[2]]
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(., Advanced_Composites = t(Weights * Fudge_Factors))
Total_Weights = data.frame(
Part = "Total",
General_Aviation = sum(Weights[, 2]),
Advanced_Composites = sum(Weights[, 3]))
Weights <- rbind(Weights, Total_Weights)
rownames(Weights) <- NULL
Weights_SI <- data.frame(
Part = Weights[,1],
Weights[,2:3]/kg_to_lb)
Weights_Fraction <- data.frame(
Part = Weights[,1],
General_Aviation = Weights[,2]/as.double(Total_Weights[2]),
Advanced_Composites = Weights[,3]/as.double(Total_Weights[3]))
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
Weights_Fraction
Weights_SI
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate (WS, PS, W_dg_SI, composite = TRUE),
6000, 0.001, 1, positive = TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Numerical Methods.R', echo=TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate (WS, PS, W_dg_SI, composite = TRUE),
6000, 0.001, 1, positive = TRUE)
W_dg_SI
W_dg_SI = 600
W_dg_SI = 6000
W_dg_SI - Weight_Estimate (WS, PS, W_dg_SI, composite = TRUE)
W_dg_SI - Weight_Estimate(WS, PS, W_dg_SI, composite = TRUE)
WS
PS
W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)
W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)
Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)
W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)[[1]]
W_dg_SI = 6000 + 0.0001
W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)[[1]]
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)[[1]],
6000, 0.001, 1, positive = TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)[[1]],
6000, 0.001, 1, positive = TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)[[1]],
6000, 0.001, 0.01, positive = TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE)[[1]],
6000, 0.001, 0.01, positive = TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001, 0.01, positive = TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001, 0.01, positive = TRUE)
Weights = Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)[[1]]
W_dg_SI = ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001, 0.01, positive = TRUE)
Weights = Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)[[1]]
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(., Advanced_Composites = t(Weights * Fudge_Factors))
Total_Weights = data.frame(
Part = "Total",
General_Aviation = sum(Weights[, 2]),
Advanced_Composites = sum(Weights[, 3]))
Weights <- rbind(Weights, Total_Weights)
rownames(Weights) <- NULL
Weights_SI <- data.frame(
Part = Weights[,1],
Weights[,2:3]/kg_to_lb)
Weights_Fraction <- data.frame(
Part = Weights[,1],
General_Aviation = Weights[,2]/as.double(Total_Weights[2]),
Advanced_Composites = Weights[,3]/as.double(Total_Weights[3]))
Total_Weights
Weights
Weights_SI
Weights_SI
Weights_Fraction
Weights_Fraction$General_Aviation
1/(pi * 20 * 0.7993)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
Weights_SI
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Correlations Raymer.R', echo=TRUE)
Total_Weights
Weights
Weights_SI
Weights = Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)[[1]]
Weights <- Weights %>%
gather(key = Part, value = General_Aviation) %>%
data.frame(., Advanced_Composites = t(Weights * Fudge_Factors))
Total_Weights = data.frame(
Part = "Total",
General_Aviation = sum(Weights[, 2]),
Advanced_Composites = sum(Weights[, 3]))
Weights <- rbind(Weights, Total_Weights)
rownames(Weights) <- NULL
Total_Weights_SI <- data.frame(
Part = Total_Weights[, 1],
Total_Weights[, 2:3] / kg_to_lb) %>%
mutate(Saving = General_Aviation - Advanced_Composites)
Total_Weights_SI
W_dg_SI
W_dg_SI
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
ARvarplot <- data.frame()
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
data.frame(AR = W_dg_SI, MTOM = W_dg_SI)
data.frame(AR = AR, MTOM = W_dg_SI)
ARvarplot
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
ggplot(data = ARvarplot, aes(x = AR, y = MTOM)) + geom_point()
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
ARvarplot
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
