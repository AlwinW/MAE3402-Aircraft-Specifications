)
)) %>%
do(data.frame(
.,
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
projectedgraphs <- data.frame(projectedgraphs)
return(projectedgraphs)
}
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = seq(15, 35, 2.5))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR)) + geom_line()
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line()
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = x)
x
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(aes(breaks = x))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(aes(breaks = x, labels = paste(round(WS,1),round(PW,1),sep = "\n")))
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = seq(15, 35, 2.5))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(aes(breaks = x, labels = "hi"))
?scale_x_continuous
paste(round(projectedgraphs$WS,1),round(projectedgraphs$PW,1),sep = "\n")
class(paste(round(projectedgraphs$WS,1),round(projectedgraphs$PW,1),sep = "\n"))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x)
labels
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$WS)
source('~/Git/MAE3402 Aircraft Specifications/Helper Install Packages.R', echo=TRUE)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = round(labels$WS,1))
labels
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = seq(15, 35, 2.5))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(WS, PW, sep="\n"))
labels <- cbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS\nPW"), labels)
labels
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS\nPW"), labels)
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(WS, PW, sep="\n"))
rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS\nPW"), labels)
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS\nPW"), labels)
labels
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis")
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR) %>%
mutate(AR = as.factor(AR, levels = varAR, ordered = TRUE))
varAR = seq(15, 35, 2.5)
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR) %>%
mutate(AR = as.factor(AR, levels = varAR, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis")
varAR = seq(15, 35, 2.5)
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR) %>%
mutate(AR = factor(AR, levels = varAR, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis")
varAR = seq(15, 35, 1)
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR) %>%
mutate(AR = factor(AR, levels = varAR, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis")
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
ylim(c(NA, 10000))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(NA, 10000))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(0, 10000))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5000, 10000))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 10000))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 9000))
varAR = seq(15, 80, 1)
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR) %>%
mutate(AR = factor(AR, levels = varAR, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 9000))
varAR = seq(15, 82, 1)
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR) %>%
mutate(AR = factor(AR, levels = varAR, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 9000))
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 9000)) +
ggtitle("Effect of Aspect Ratio on MTOM")
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR)
source('~/Git/MAE3402 Aircraft Specifications/Helper Weight Optimisation.R', echo=TRUE)
source('~/Git/MAE3402 Aircraft Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
projectedgraphs <- ProjectedGraphs(xaxis, inp, L_fusein = varL_fusein)
projectedgraphs <- mutate(projectedgraphs, L_fusein = factor(L_fusein, levels = varL_fusein, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = L_fusein, colour = L_fusein)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 9000)) +
ggtitle("Effect of Length of Fuselage on MTOM")
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = L_fusein, colour = L_fusein)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(6800, 9000)) +
ggtitle("Effect of Length of Fuselage on MTOM")
names(projectedgraphs)
ggplot(Cd0, aes(x = x, y = MTOM, group = L_fusein, colour = L_fusein)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
# coord_cartesian(ylim = c(6800, 9000)) +
ggtitle("Effect of Length of Fuselage on MTOM")
ggplot(projectedgraphs, aes(x = x, y = Cd0, group = L_fusein, colour = L_fusein)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
# coord_cartesian(ylim = c(6800, 9000)) +
ggtitle("Effect of Length of Fuselage on MTOM")
ProjectedxAxis <- function(inp, WSlower, WSupper, PWupper) {
intersect <- inp %>%
select(-S, -b, -m, -W) %>%
mutate(h = AltCruise,
Etaprop = etaprop(inp$Vcruise),
Etatotal = inp$etamech*Etaprop,
BatteryFactor = 1.03,
Cd0G = inp$Cd0clean + inp$Cd0lg + inp$Cd0flaps + inp$Cdiflaps + inp$Cd0propfea, # feathered, 0.205 unfeathered
EtapropG = etaprop(1.2 * inp$VsTO)) %>%
StandardAtomsphere(.) %>%
mutate(
ClTO = Clclean + Clflaps,
ClLD = Clclean + Clhls,
qinf = 1/2 * rho * Vcruise^2)
Seg2_TOFL_WS <- ModifiedSecant(
function(WS) PW_Seg2_Climb(intersect, WS, PWval = TRUE) - PW_TOFL(intersect, WS, PWval = TRUE),
xr = 2000, del = 0.001, toler = 0.01, positive = TRUE
)
App_WS = WS_App(intersect, WSval = TRUE)
Seg2_App_PW = PW_Seg2_Climb(intersect, WS = App_WS, PWval = TRUE)
TOFL_App_PW = PW_TOFL(intersect, WS = App_WS, PWval = TRUE)
## DON'T WORRY ABOUT GENERAL CASES ANY MORE, JUST CODE AS IF Seg2_TOFL_WS < App_WS
varWS = seq(WSlower, WSupper, by = 50)
xaxis1 <- c(varWS[varWS < Seg2_TOFL_WS], Seg2_TOFL_WS)
xaxis1 <- data.frame(
WS = xaxis1,
PW = PW_Seg2_Climb(intersect, WSinp = xaxis1, PWval = TRUE)
)
xaxis2 <- c(varWS[varWS > Seg2_TOFL_WS & varWS < App_WS], App_WS)
xaxis2 <- data.frame(
WS = xaxis2,
PW = PW_TOFL(intersect, WSinp = xaxis2, PWval = TRUE)
)
varPW = seq(0, PWupper, 0.5)
xaxis3 <- c(PW_TOFL(intersect, WS = App_WS, PWval = TRUE), varPW[varPW > PW_TOFL(intersect, WS = App_WS, PWval = TRUE)])
xaxis3 <- data.frame(
WS = App_WS,
PW = xaxis3
)
xaxis <- cbind(
pseudox = seq(1:nrow(xaxis)),
rbind(xaxis1, xaxis2, xaxis3)
)
return(xaxis)
}
varAR = seq(15, 82, 1)
projectedgraphs <- ProjectedGraphs(xaxis, inp, AR = varAR)
projectedgraphs <- mutate(projectedgraphs, AR = factor(AR, levels = varAR, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = AR, colour = AR)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(5500, 9000)) +
ggtitle("Effect of Aspect Ratio on MTOM")
varL_fusein = seq(10, 15, 0.1)
projectedgraphs <- ProjectedGraphs(xaxis, inp, L_fusein = varL_fusein)
projectedgraphs <- mutate(projectedgraphs, L_fusein = factor(L_fusein, levels = varL_fusein, ordered = TRUE))
labels <- select(projectedgraphs, x, WS, PW) %>% distinct(.keep_all = TRUE) %>% arrange(x) %>%
mutate(label = paste(round(WS,1), round(PW,1), sep="\n"))
labels <- rbind(data.frame(x = 0, WS = NA, PW = NA, label = "WS:\nPW:"), labels)
ggplot(projectedgraphs, aes(x = x, y = MTOM, group = L_fusein, colour = L_fusein)) + geom_line() +
scale_x_continuous(breaks = labels$x, labels = labels$label) +
ylab("Maximum Take-off Mass (MTOM)") +
xlab("Projected Axis") +
coord_cartesian(ylim = c(6800, 9000)) +
ggtitle("Effect of Length of Fuselage on MTOM")
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2)
})
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(10, 30, length.out = 21)
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2)
})
?polygon
?lines
?polygon
plot(lines(x = xaxis$WS, y = xaxis$PW, lwd = 2))
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2)
plot()
plot(x = 1, y = 1)
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2)
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = xaxis$WS, y = xaxis$PW, density = 0.5)
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, Inf, Inf, 0), y = c(xaxis$PW, Inf, 0, 0),
density = 0.5)
})
x = c(xaxis$WS, Inf, Inf, 0)
x
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 0.5)
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3)
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, border = "red")
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, alpha = 0.5)
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 5)
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3)
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(8,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3)
})
brewer.pal.info
filled.contour(varWS, varPW, asdf, nlevels = 10, col=brewer.pal(8,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3)
})
filled.contour(varWS, varPW, asdf, nlevels = 9, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3)
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3)
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, colour = "red")
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, col = "red")
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, col = "red");
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, col = "grey");
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, col = "red");
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
})
filled.contour(varWS, varPW, asdf, nlevels = 8, col=brewer.pal(9,"YlOrRd"),
xlab="Wing Loading (WS)",ylab="Power Loading (PW)",
main = "Maximum Take Off Mass (MTOM)",
# plot.title = "MTOM",
plot.axes = {
axis(1); axis(2);
contour(varWS, varPW, asdf,
drawlabels = TRUE, add = TRUE);
points(2000, 10);
polygon(x = c(xaxis$WS, 3500, 3500, 0), y = c(xaxis$PW, 30, 0, 0),
density = 3, col = "grey40");
lines(x = xaxis$WS, y = xaxis$PW, lwd = 2);
})
