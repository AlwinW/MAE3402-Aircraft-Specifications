Total_Weights_SI <- data.frame(
Part = Total_Weights[, 1],
Total_Weights[, 2:3] / kg_to_lb) %>%
mutate(Saving = General_Aviation - Advanced_Composites)
Weights_SI <- data.frame(
Part = Weights[,1],
Weights[,2:3]/kg_to_lb)
# Tabulated Weights Fraction
Weights_Fraction <- data.frame(
Part = Weights[,1],
General_Aviation = Weights[,2]/as.double(Total_Weights[2]),
Advanced_Composites = Weights[,3]/as.double(Total_Weights[3]))
# Row data frame for cbind
Rowsummary <- cbind(
set_names(Total_Weights_SI[,2:4], paste(colnames(Total_Weights_SI[,2:4]),"Total", sep="_")),
WeightsRow
)
Total_Weights_SI
WeightsRow/W_eset
WeightsRow/W_est
W_est
WeightsRow/kg_to_lb
WeightsRow/kg_to_lb/W_est
Rowsummary <- cbind(
set_names(Total_Weights_SI[,2:4], paste(colnames(Total_Weights_SI[,2:4]),"Total", sep="_")),
WeightsRow/kg_to_lb,
set_names(WeightsRow/kg_to_lb/W_est, paste(colnames(WeightsRow),"Fraction", sep="_"))
)
Rowsummary
Weights_Fraction
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
),
# Determine other values
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = TRUE)
))
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
Weight_Estimate(WS, PW, MTOM, composite = TRUE, iteration = TRUE)[[1]]
Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = TRUE)[[1]]
Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = FALSE)[[1]]
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = FALSE),
6000, 0.001,0.01, positive = TRUE
)
))
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = FALSE),
6000, 0.001,0.01, positive = TRUE
)
))
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
),
# Determine other values
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
),
# Determine other values
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
Weight_Estimate(weightoptim$WS, weightoptim$PW, weightoptim$MTOM, composite = TRUE, iteration = FALSE)[[1]]
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
)
# ,
# # Determine other values
# Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
Weight_Estimate(weightoptim$WS, weightoptim$PW, weightoptim$MTOM, composite = TRUE, iteration = FALSE)[[1]]
ggplot(data = weightoptim, aes(x = WS, y = PW)) +
geom_point(aes(colour = MTOM, size = 1/MTOM))
ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..))
c(seq(4000, 7000, 100))
c(seq(4000, 7000, 100), seq(7000, 10000, 250))
ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..),
breaks=c(c(seq(4000, 7000, 100), seq(7000, 10000, 250)))
)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
v<-ggplot(volcano, aes(x=X1,y=X2,z=value))  # specify the mapping properly
e<-v + stat_contour(aes(colour=..level..), breaks=c(160, 170, 180))
direct.label(e)
install.packages(directlabels)
install.packages("directlabels")
v <- ggplot(volcano3d, aes(x, y, z = z))
library(directlabels)
v2 <- v + stat_contour(aes(colour = ..level..))
direct.label(v2)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation_GOBACK.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation_GOBACK.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
direct.label(MTOMcontourplot, method = "bottom.pieces")
library(directlabels)
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..),
breaks=c(c(seq(4000, 7000, 100), seq(7000, 10000, 250)))
)
direct.label(MTOMcontourplot, method = "bottom.pieces")
?direct.label
direct.label(MTOMcontourplot, method = "top.pieces")
direct.label(MTOMcontourplot, method = "middle.pieces")
direct.label(MTOMcontourplot, method = "center.pieces")
direct.label(MTOMcontourplot)
direct.label(MTOMcontourplot, method = "top.firstpoints")
direct.label(MTOMcontourplot, method = "angled.firstpoints")
direct.label(MTOMcontourplot, method = "bottom.pieces")
direct.label(MTOMcontourplot, method = "top.pieces")
points <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
geom_point(aes(colour = MTOM, size = 1/MTOM))
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..),
breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#,
# breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
)
,
# Determine other values
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
Rowsummary
length(Rowsummary)
rep(NA, 31)
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
)
# ,
# # Determine other values
# Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
View(weightoptim)
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#,
# breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
weightoptim %>%
rowwise() %>%
do(data.frame(., Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]))
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
)
)) %>%
do(data.frame(
.,
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#,
# breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
names(weightoptim)
BatteryFractioncontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = batteries_Fraction, colour = ..level..)
)
direct.label(MTOMcontourplot, method = "top.pieces")
direct.label(BatteryFractioncontourplot, method = "top.pieces")
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..)
)
direct.label(S_wing, method = "top.pieces")
ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..)
)
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..)
)
direct.label(Swingcontourplot, method = "top.pieces")
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM))
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM))
ggplot(data = weightoptim) +
geom_path(aes(x = S_wing, y = MTOM))
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = PW, colour = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = WS, colour = WS))
Cd0contourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = Cd0, colour = ..level..)
)
direct.label(Cd0contourplot, method = "top.pieces")
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
Cd0contourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = Cd0, colour = ..level..)
)
direct.label(Cd0contourplot, method = "top.pieces")
Saving_totalplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = Saving_total, colour = ..level..)
)
direct.label(Saving_totalplot, method = "top.pieces")
Savingplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = Saving_Total, colour = ..level..)
)
direct.label(Savingplot, method = "top.pieces")
BatteryFractioncontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = batteries_Fraction, colour = ..level..)
)
direct.label(BatteryFractioncontourplot, method = "top.pieces")
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#,
# breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
inp  <- cbind(input_initial, specificationns)
inp  <- cbind(input_initial, specifications)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
## Constraint Plot ======================================================================
ggplot(data = constraint, aes(x = WS, group = Clhls)) +
geom_vline(aes(xintercept = WS_App, colour = "Landing")) +
geom_line(aes(y = PW_TOFL, colour = "Takeoff")) +
geom_line(aes(y = PW_Ceiling_Climb, colour = "Ceiling Climb")) +
geom_line(aes(y = PW_Seg2_Climb, colour = "2nd Segment OEI")) +
geom_line(aes(y = PW_Cruise_Climb, colour = "Cruise Climb")) +
geom_vline(aes(xintercept = WS_Clstar, colour = "Clstar")) +
geom_vline(aes(xintercept = WS_WbW0_Max, colour = "Wb/W0")) +
geom_line(aes(y = PW_Cruise, colour = "Cruise")) +
# Landing Labels
geom_label(aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
geom_label(aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
# WbW0 Labels
geom_label(aes(x = WS_WbW0_Max, y = 10, label = sprintf("%0.2f", WbW0_Max),
colour = "Wb/W0"), size = rel(3), show.legend = FALSE) +
# Clstar Labels
geom_label(aes(x = WS_Clstar, y = 14, label = sprintf("Cl*"),
colour = "Clstar"), size = rel(3), show.legend = FALSE) +
# Cruise Labels
geom_point(aes(y = PW_Cruise, colour = "Cruise")) +
geom_label(aes(y = PW_Cruise, label = sprintf("%0.2f", Clcruise),
colour = "Cruise"), size = rel(3), vjust = 1.5, show.legend = FALSE) +
# Takeoff Labels
geom_label(data = filter(constraint, WS == varWS[3]),
aes(x = WS, y = PW_TOFL, label = sprintf("%0.2f", Clhls),
colour = "Takeoff"), size = rel(3), show.legend = FALSE) +
# Us
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
xlab("Wing Loading (N/m^2)") +
ylab("Power Loading (W/N)") +
ggtitle("Constraint Analysis") +
geom_label(x = -Inf, y = Inf, vjust = 1.5, hjust = -0.1,
label = "Constant Cd0, AR, e and eta")
direct.label(MTOMcontourplot, method = "top.pieces")
direct.label(Swingcontourplot, method = "top.pieces")
direct.label(Cd0contourplot, method = "top.pieces")
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Rough Sizing Iterations.R', echo=TRUE)
ARvarplot <- data.frame(AR = NA, MTOM = NA)
for (AR in seq(18,100,2)){
W_dg_SI = ModifiedSecant(function(W_dg_SI) W_dg_SI - Weight_Estimate(WS, PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001, 0.01, positive = TRUE)
ARvarplot <- rbind(ARvarplot, data.frame(AR = AR, MTOM = W_dg_SI))
}
ggplot(data = ARvarplot, aes(x = AR, y = MTOM)) + geom_point()
AR = 30
# Grid of data values
varWS <- seq(1500,3500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
)
)) %>%
do(data.frame(
.,
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
ggplot(data = weightoptim) +
geom_point(aes(x = WS, y = MTOM, colour = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = WS, y = MTOM, colour = PW, group = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = PW, y = MTOM, colour = PW, group = WS)
_
ggplot(data = weightoptim) +
geom_line(aes(x = PW, y = MTOM, colour = PW, group = WS))
ggplot(data = weightoptim) +
geom_line(aes(x = PW, y = MTOM, colour = WS, group = WS))
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
sd(weightoptim$MTOM)
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
sd(weightoptim$MTOM)
sd(weightoptim$MTOM)/2
BatteryFractioncontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = batteries_Fraction, colour = ..level..)
)
direct.label(BatteryFractioncontourplot, method = "top.pieces")
sd(weightoptim$batteries_Fraction)
x<-seq(1,11,.03)                    # note finer grid
y<-seq(1,11,.03)
xyz.func<-function(x,y) {-10.4+6.53*x+6.53*y-0.167*x^2-0.167*y^2+0.0500*x*y}
gg <- expand.grid(x=x,y=y)
gg$z <- with(gg,xyz.func(x,y))      # need long format for ggplot
library(ggplot2)
library(RColorBrewer)               #for brewer.pal()
brks <- cut(gg$z,breaks=seq(0,100,len=6))
brks <- gsub(","," - ",brks,fixed=TRUE)
gg$brks <- gsub("\\(|\\]","",brks)  # reformat guide labels
ggplot(gg,aes(x,y)) +
geom_tile(aes(fill=brks))+
scale_fill_manual("Z",values=brewer.pal(6,"YlOrRd"))+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
coord_fixed()
head(weightoptim)
weightoptim <- data.frame(weightoptim)
head(weightoptim)
?sd
weightoptimdiscrete <- weightoptim
apply(weightoptim, 2, sd)
sdcut  <- apply(weightoptim, 2, sd) / 2
?signif
signif(sdcut)
signif(sdcut, 1)
?cut
brks <- cut(weightoptim$MTOM)
brks <- gsub(",", " - ", brks, fixed = TRUE)
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500))
brks <- gsub(",", " - ", brks, fixed = TRUE)
brks
weightoptimdiscrete <- weightoptim
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500))
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete <- gsub("\\(|\\]","",brks)
weightoptimdiscrete
weightoptimdiscrete <- weightoptim
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500))
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete$MTOM <- gsub("\\(|\\]","",brks)
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500), dig.lab = 10)
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete$MTOM <- gsub("\\(|\\]","",brks)
weightoptimdiscrete$MTOM
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fil = MTOM)) +
scale_fill_manual("MTOM",values=brewer.pal(6,"YlOrRd"))
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM)) +
scale_fill_manual("MTOM",values=brewer.pal(6,"YlOrRd")
)
weightoptimdiscrete <- weightoptim
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500), dig.lab = 10)
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete$MTOM <- gsub("\\(|\\]","",brks)
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM)) +
scale_fill_manual("MTOM",values=brewer.pal(14,"YlOrRd"))
brewer.pal.info
length(seq(3000, 20000, 500))
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM))
install.packages("lattice")
library(lattice)
x<-seq(1,11,1)
y<-seq(1,11,1)
xyz.func<-function(x,y) {-10.4+6.53*x+6.53*y-0.167*x^2-0.167*y^2+0.0500*x*y}
z.lattice<-outer(x,y,xyz.func)
filled.contour(x,y,z.lattice,nlevels=6,col=brewer.pal(6,"YlOrRd"))
?outer
filled.contour()
filled.contour(weightoptim$WS, weightoptim$PW, weightoptim$MTOM)
z.lattice
ggplot(data = weightoptim, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM))
