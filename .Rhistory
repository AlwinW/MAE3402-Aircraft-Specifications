)
)) %>%
do(data.frame(
.,
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Weight Optimisation Graphs.R', echo=TRUE)
ggplot(data = weightoptim) +
geom_point(aes(x = WS, y = MTOM, colour = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = WS, y = MTOM, colour = PW, group = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = PW, y = MTOM, colour = PW, group = WS)
_
ggplot(data = weightoptim) +
geom_line(aes(x = PW, y = MTOM, colour = PW, group = WS))
ggplot(data = weightoptim) +
geom_line(aes(x = PW, y = MTOM, colour = WS, group = WS))
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
sd(weightoptim$MTOM)
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
)
direct.label(MTOMcontourplot, method = "top.pieces")
sd(weightoptim$MTOM)
sd(weightoptim$MTOM)/2
BatteryFractioncontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = batteries_Fraction, colour = ..level..)
)
direct.label(BatteryFractioncontourplot, method = "top.pieces")
sd(weightoptim$batteries_Fraction)
x<-seq(1,11,.03)                    # note finer grid
y<-seq(1,11,.03)
xyz.func<-function(x,y) {-10.4+6.53*x+6.53*y-0.167*x^2-0.167*y^2+0.0500*x*y}
gg <- expand.grid(x=x,y=y)
gg$z <- with(gg,xyz.func(x,y))      # need long format for ggplot
library(ggplot2)
library(RColorBrewer)               #for brewer.pal()
brks <- cut(gg$z,breaks=seq(0,100,len=6))
brks <- gsub(","," - ",brks,fixed=TRUE)
gg$brks <- gsub("\\(|\\]","",brks)  # reformat guide labels
ggplot(gg,aes(x,y)) +
geom_tile(aes(fill=brks))+
scale_fill_manual("Z",values=brewer.pal(6,"YlOrRd"))+
scale_x_continuous(expand=c(0,0))+
scale_y_continuous(expand=c(0,0))+
coord_fixed()
head(weightoptim)
weightoptim <- data.frame(weightoptim)
head(weightoptim)
?sd
weightoptimdiscrete <- weightoptim
apply(weightoptim, 2, sd)
sdcut  <- apply(weightoptim, 2, sd) / 2
?signif
signif(sdcut)
signif(sdcut, 1)
?cut
brks <- cut(weightoptim$MTOM)
brks <- gsub(",", " - ", brks, fixed = TRUE)
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500))
brks <- gsub(",", " - ", brks, fixed = TRUE)
brks
weightoptimdiscrete <- weightoptim
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500))
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete <- gsub("\\(|\\]","",brks)
weightoptimdiscrete
weightoptimdiscrete <- weightoptim
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500))
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete$MTOM <- gsub("\\(|\\]","",brks)
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500), dig.lab = 10)
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete$MTOM <- gsub("\\(|\\]","",brks)
weightoptimdiscrete$MTOM
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fil = MTOM)) +
scale_fill_manual("MTOM",values=brewer.pal(6,"YlOrRd"))
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM)) +
scale_fill_manual("MTOM",values=brewer.pal(6,"YlOrRd")
)
weightoptimdiscrete <- weightoptim
brks <- cut(weightoptim$MTOM, breaks = seq(3000, 20000, 500), dig.lab = 10)
brks <- gsub(",", " - ", brks, fixed = TRUE)
weightoptimdiscrete$MTOM <- gsub("\\(|\\]","",brks)
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM)) +
scale_fill_manual("MTOM",values=brewer.pal(14,"YlOrRd"))
brewer.pal.info
length(seq(3000, 20000, 500))
ggplot(data = weightoptimdiscrete, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM))
install.packages("lattice")
library(lattice)
x<-seq(1,11,1)
y<-seq(1,11,1)
xyz.func<-function(x,y) {-10.4+6.53*x+6.53*y-0.167*x^2-0.167*y^2+0.0500*x*y}
z.lattice<-outer(x,y,xyz.func)
filled.contour(x,y,z.lattice,nlevels=6,col=brewer.pal(6,"YlOrRd"))
?outer
filled.contour()
filled.contour(weightoptim$WS, weightoptim$PW, weightoptim$MTOM)
z.lattice
ggplot(data = weightoptim, aes(x = WS, y = PW)) +
geom_tile(aes(fill = MTOM))
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Install Packages.R', echo=TRUE)
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
) +
ggplot("MTOM")
direct.label(MTOMcontourplot, method = "top.pieces")
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
) +
ggtitle("MTOM")
direct.label(MTOMcontourplot, method = "top.pieces")
direct.label(MTOMcontourplot, method = "top.pieces") + geom_vline(xintercept = 2000)
BatteryFractioncontourplot <- direct.label(BatteryFractioncontourplot, method = "top.pieces")
BatteryFractioncontourplot
BatteryFractioncontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = batteries_Fraction, colour = ..level..)
)
LabelledBatteryFractioncontourplot <- direct.label(BatteryFractioncontourplot, method = "top.pieces")
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
) +
ggtitle("MTOM")
LabelledMTOMcontourplot <- direct.label(MTOMcontourplot, method = "top.pieces")
LabelledMTOMcontourplot
BatteryFractionPlot
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
ConstraintPlot
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
ConstraintPlot]
ConstraintPlot
LabelledMTOMcontourplot + ConstraintPlot
LabelledMTOMcontourplot
## Constraint Plot ======================================================================
ConstraintPlot + #ggplot(data = constraint, aes(x = WS, group = Clhls)) +
geom_vline(data = constraint, aes(xintercept = WS_App, colour = "Landing")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_TOFL, colour = "Takeoff")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Ceiling_Climb, colour = "Ceiling Climb")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Seg2_Climb, colour = "2nd Segment OEI")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise_Climb, colour = "Cruise Climb")) +
geom_vline(data = constraint, aes(xintercept = WS_Clstar, colour = "Clstar")) +
geom_vline(data = constraint, aes(xintercept = WS_WbW0_Max, colour = "Wb/W0")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
# Landing Labels
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
# WbW0 Labels
geom_label(data = constraint, aes(x = WS_WbW0_Max, y = 10, label = sprintf("%0.2f", WbW0_Max),
colour = "Wb/W0"), size = rel(3), show.legend = FALSE) +
# Clstar Labels
geom_label(data = constraint, aes(x = WS_Clstar, y = 14, label = sprintf("Cl*"),
colour = "Clstar"), size = rel(3), show.legend = FALSE) +
# Cruise Labels
geom_point(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
geom_label(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, label = sprintf("%0.2f", Clcruise),
colour = "Cruise"), size = rel(3), vjust = 1.5, show.legend = FALSE) +
# Takeoff Labels
geom_label(data = constraint, data = filter(constraint, WS == varWS[3]),
aes(x = WS, y = PW_TOFL, label = sprintf("%0.2f", Clhls),
colour = "Takeoff"), size = rel(3), show.legend = FALSE) +
# OEI Labels
geom_label(data = constraint, data = filter(constraint, WS == varWS[2]),
aes(x = WS, y = PW_Seg2_Climb, label = sprintf("%0.2f", Clhls),
colour = "2nd Segment OEI"), size = rel(3), show.legend = FALSE) +
# Us
geom_point(data = constraint, data = inp, aes(x = WS, y = P0/W, label = "Design")) +
xlab("Wing Loading (N/m^2)") +
ylab("Power Loading (W/N)") +
ggtitle("Constraint Analysis") +
geom_label(x = -Inf, y = Inf, vjust = 1.5, hjust = -0.1,
label = "Constant Cd0, AR, e and eta")
ConstraintPlot + #ggplot(data = constraint, aes(x = WS, group = Clhls)) +
geom_vline(data = constraint, aes(xintercept = WS_App, colour = "Landing")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_TOFL, colour = "Takeoff")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Ceiling_Climb, colour = "Ceiling Climb")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Seg2_Climb, colour = "2nd Segment OEI")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise_Climb, colour = "Cruise Climb")) +
geom_vline(data = constraint, aes(xintercept = WS_Clstar, colour = "Clstar")) +
geom_vline(data = constraint, aes(xintercept = WS_WbW0_Max, colour = "Wb/W0")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
# Landing Labels
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
# WbW0 Labels
geom_label(data = constraint, aes(x = WS_WbW0_Max, y = 10, label = sprintf("%0.2f", WbW0_Max),
colour = "Wb/W0"), size = rel(3), show.legend = FALSE) +
# Clstar Labels
geom_label(data = constraint, aes(x = WS_Clstar, y = 14, label = sprintf("Cl*"),
colour = "Clstar"), size = rel(3), show.legend = FALSE) +
# Cruise Labels
geom_point(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
geom_label(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, label = sprintf("%0.2f", Clcruise),
colour = "Cruise"), size = rel(3), vjust = 1.5, show.legend = FALSE) +
# Takeoff Labels
geom_label(data = filter(constraint, WS == varWS[3]),
aes(x = WS, y = PW_TOFL, label = sprintf("%0.2f", Clhls),
colour = "Takeoff"), size = rel(3), show.legend = FALSE) +
# OEI Labels
geom_label(data = filter(constraint, WS == varWS[2]),
aes(x = WS, y = PW_Seg2_Climb, label = sprintf("%0.2f", Clhls),
colour = "2nd Segment OEI"), size = rel(3), show.legend = FALSE) +
# Us
geom_point(data = constraint, data = inp, aes(x = WS, y = P0/W, label = "Design")) +
xlab("Wing Loading (N/m^2)") +
ylab("Power Loading (W/N)") +
ggtitle("Constraint Analysis") +
geom_label(x = -Inf, y = Inf, vjust = 1.5, hjust = -0.1,
label = "Constant Cd0, AR, e and eta")
## Constraint Plot ======================================================================
ConstraintPlot + #ggplot(data = constraint, aes(x = WS, group = Clhls)) +
geom_vline(data = constraint, aes(xintercept = WS_App, colour = "Landing")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_TOFL, colour = "Takeoff")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Ceiling_Climb, colour = "Ceiling Climb")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Seg2_Climb, colour = "2nd Segment OEI")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise_Climb, colour = "Cruise Climb")) +
geom_vline(data = constraint, aes(xintercept = WS_Clstar, colour = "Clstar")) +
geom_vline(data = constraint, aes(xintercept = WS_WbW0_Max, colour = "Wb/W0")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
# Landing Labels
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
# WbW0 Labels
geom_label(data = constraint, aes(x = WS_WbW0_Max, y = 10, label = sprintf("%0.2f", WbW0_Max),
colour = "Wb/W0"), size = rel(3), show.legend = FALSE) +
# Clstar Labels
geom_label(data = constraint, aes(x = WS_Clstar, y = 14, label = sprintf("Cl*"),
colour = "Clstar"), size = rel(3), show.legend = FALSE) +
# Cruise Labels
geom_point(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
geom_label(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, label = sprintf("%0.2f", Clcruise),
colour = "Cruise"), size = rel(3), vjust = 1.5, show.legend = FALSE) +
# Takeoff Labels
geom_label(data = filter(constraint, WS == varWS[3]),
aes(x = WS, y = PW_TOFL, label = sprintf("%0.2f", Clhls),
colour = "Takeoff"), size = rel(3), show.legend = FALSE) +
# OEI Labels
geom_label(data = filter(constraint, WS == varWS[2]),
aes(x = WS, y = PW_Seg2_Climb, label = sprintf("%0.2f", Clhls),
colour = "2nd Segment OEI"), size = rel(3), show.legend = FALSE) +
# Us
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
xlab("Wing Loading (N/m^2)") +
ylab("Power Loading (W/N)") +
ggtitle("Constraint Analysis") +
geom_label(x = -Inf, y = Inf, vjust = 1.5, hjust = -0.1,
label = "Constant Cd0, AR, e and eta")
ConstraintPlot + stat_contour(data = weightoptim, aes(x = WS, y = PW, z = MTOM, colour = ..level..))
ConstraintPlot + stat_contour(data = weightoptim, aes(x = WS, y = PW, z = MTOM, colour = ..level..))
ConstraintPlot
MTOMcontourplot
LabelledMTOMcontourplot
MTOMcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = MTOM, colour = ..level..)#breaks=c(c(seq(4000, 8000, 100), seq(7000, 20000, 500)))
) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("MTOM")
LabelledMTOMcontourplot <- direct.label(MTOMcontourplot, method = "top.pieces")
inp
LabelledMTOMcontourplot
## Constraint Plot ======================================================================
LabelledMTOMcontourplot + #ggplot(data = constraint, aes(x = WS, group = Clhls)) +
geom_vline(data = constraint, aes(xintercept = WS_App, colour = "Landing")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_TOFL, colour = "Takeoff")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Ceiling_Climb, colour = "Ceiling Climb")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Seg2_Climb, colour = "2nd Segment OEI")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise_Climb, colour = "Cruise Climb")) +
geom_vline(data = constraint, aes(xintercept = WS_Clstar, colour = "Clstar")) +
geom_vline(data = constraint, aes(xintercept = WS_WbW0_Max, colour = "Wb/W0")) +
geom_line(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
# Landing Labels
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
geom_label(data = constraint, aes(x = WS_App, y = 12, label = sprintf("%0.2f", Clhls),
colour = "Landing"), size = rel(3), show.legend = FALSE) +
# WbW0 Labels
geom_label(data = constraint, aes(x = WS_WbW0_Max, y = 10, label = sprintf("%0.2f", WbW0_Max),
colour = "Wb/W0"), size = rel(3), show.legend = FALSE) +
# Clstar Labels
geom_label(data = constraint, aes(x = WS_Clstar, y = 14, label = sprintf("Cl*"),
colour = "Clstar"), size = rel(3), show.legend = FALSE) +
# Cruise Labels
geom_point(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, colour = "Cruise")) +
geom_label(data = constraint, aes(x = WS, group = Clhls, y = PW_Cruise, label = sprintf("%0.2f", Clcruise),
colour = "Cruise"), size = rel(3), vjust = 1.5, show.legend = FALSE) +
# Takeoff Labels
geom_label(data = filter(constraint, WS == varWS[3]),
aes(x = WS, y = PW_TOFL, label = sprintf("%0.2f", Clhls),
colour = "Takeoff"), size = rel(3), show.legend = FALSE) +
# OEI Labels
geom_label(data = filter(constraint, WS == varWS[2]),
aes(x = WS, y = PW_Seg2_Climb, label = sprintf("%0.2f", Clhls),
colour = "2nd Segment OEI"), size = rel(3), show.legend = FALSE) +
# Us
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
xlab("Wing Loading (N/m^2)") +
ylab("Power Loading (W/N)") +
ggtitle("Constraint Analysis") +
geom_label(x = -Inf, y = Inf, vjust = 1.5, hjust = -0.1,
label = "Constant Cd0, AR, e and eta")
LabelledMTOMcontourplot
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
ConstraintPlot
source('C:/Users/Alwin/Documents/GitHub/MAE3402-Aircraft-Specifications/Helper Constraint Analysis.R', echo=TRUE)
ConstraintPlot
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = PW, colour = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = WS, colour = WS))
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = PW, colour = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = S_wing, y = MTOM, group = WS, colour = WS))
ggplot(data = weightoptim) +
geom_line(aes(x = WS, y = MTOM, colour = PW, group = PW))
ggplot(data = weightoptim) +
geom_line(aes(x = WS, y = MTOM, colour = PW, group = PW)) +
geom_line(aes(x = PW, y = MTOM, colour = WS, group = WS))
ggplot(data = weightoptim) +
geom_line(aes(x = WS, y = MTOM, colour = MTOM, group = PW)) +
geom_line(aes(x = WS, y = MTOM, colour = MTOM, group = WS))
names(weightoptim)
11000/100
carpetplot <- weightoptim %>%
mutate(x = WS + MTOM/100)
# Carpet Plot (sort of)
ggplot(data = carpetplot, aes(x = x, y = MTOM, colour = MTOM)) +
geom_line(aes(group = PW)) +
geom_line(aes(group = WS))
head(carpetplot$WS)
head(carpetplot$x)
carpetplot <- weightoptim %>%
mutate(x = WS + MTOM/10)
# Carpet Plot (sort of)
ggplot(data = carpetplot, aes(x = x, y = MTOM, colour = MTOM)) +
geom_line(aes(group = PW)) +
geom_line(aes(group = WS))
carpetplot <- weightoptim %>%
mutate(x = WS + MTOM/10)
# Carpet Plot (sort of)
ggplot(data = carpetplot, aes(x = x, y = MTOM, colour = MTOM)) +
geom_path(aes(group = PW)) +
geom_path(aes(group = WS))
# Grid of data values
varWS <- seq(1500,5500, length.out = 21)
varPW <- seq(0, 30, length.out = 21)
weightoptim <- expand.grid(WS = varWS, PW = varPW)
weightoptim <- weightoptim %>%
rowwise() %>%
do(data.frame(
# Previous WS and PW values
.,
# Determine MTOM
MTOM = ModifiedSecant(
function(W_dg_SI)
W_dg_SI - Weight_Estimate(.$WS, .$PW, W_dg_SI, composite = TRUE, iteration = TRUE),
6000, 0.001,0.01, positive = TRUE
)
)) %>%
do(data.frame(
.,
Weight_Estimate(.$WS, .$PW, .$MTOM, composite = TRUE, iteration = FALSE)[[1]]
))
weightoptim <- data.frame(weightoptim)
# Carpet Plot (sort of)
ggplot(data = carpetplot, aes(x = x, y = MTOM, colour = MTOM)) +
geom_path(aes(group = PW)) +
geom_path(aes(group = WS)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
carpetplot <- weightoptim %>%
mutate(x = WS + MTOM/5)
# Carpet Plot (sort of)
ggplot(data = carpetplot, aes(x = x, y = MTOM, colour = MTOM)) +
geom_path(aes(group = PW)) +
geom_path(aes(group = WS)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
BatteryFractioncontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = batteries_Fraction, colour = ..level..)
) +
ggtitle("Battery Fraction")
LabelledBatteryFractioncontourplot <- direct.label(BatteryFractioncontourplot, method = "top.pieces")
LabelledBatteryFractioncontourplot
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..)
) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
# Wing area (iterated solution)
# Decreases with increasing WS (duh) but more curvature at higher WS
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,24, 1), seq(25,100,5))
) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
Cd0contourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = Cd0, colour = ..level..)
)
direct.label(Cd0contourplot, method = "top.pieces")
direct.label(Swingcontourplot, method = "top.pieces")
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,20, 1), seq(21, 30, 3), seq(25,100,5))
) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,20, 1), seq(24, 30, 3), seq(25,100,5))) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,23, 1), seq(24, 30, 3), seq(25,100,5))) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
# Wing area (iterated solution)
# Decreases with increasing WS (duh) but more curvature at higher WS
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,23, 1), seq(24, 30, 2), seq(25,100,5))) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
# Wing area (iterated solution)
# Decreases with increasing WS (duh) but more curvature at higher WS
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,23, 1), seq(24, 30, 2.5), seq(25,100,5))) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
Swingcontourplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = S_wing, colour = ..level..),
breaks = c(seq(5,23, 1), seq(25, 30, 2.5), seq(25,100,5))) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("Wing Area")
direct.label(Swingcontourplot, method = "top.pieces")
Savingplot <- ggplot(data = weightoptim, aes(x = WS, y = PW)) +
stat_contour(aes(z = Saving_Total, colour = ..level..)
)
direct.label(Savingplot, method = "top.pieces")
Savingplot <- ggplot(data = weightoptim, aes(x = WS, y = PW))+
stat_contour(aes(z = Saving_Total, colour = ..level..),
breaks = c(seq(100, 150, 10), seq(150, 200, 25), seq(200, 1000, 50))
)
direct.label(Savingplot, method = "top.pieces")
Savingplot <- ggplot(data = weightoptim, aes(x = WS, y = PW))+
stat_contour(aes(z = Saving_Total, colour = ..level..),
breaks = c(seq(100, 150, 5), seq(150, 200, 25), seq(200, 1000, 50))
)
direct.label(Savingplot, method = "top.pieces")
Savingplot <- ggplot(data = weightoptim, aes(x = WS, y = PW))+
stat_contour(aes(z = Saving_Total, colour = ..level..),
breaks = c(seq(100, 150, 10), seq(150, 200, 25), seq(200, 1000, 50))
)
direct.label(Savingplot, method = "top.pieces")
Savingplot <- ggplot(data = weightoptim, aes(x = WS, y = PW))+
stat_contour(aes(z = Saving_Total, colour = ..level..),
breaks = c(seq(100, 150, 10), seq(150, 200, 25), seq(200, 1000, 50))
) +
geom_point(data = inp, aes(x = WS, y = P0/W, label = "Design")) +
ggtitle("Composite Weight Saving (Raymer Correlation)")
direct.label(Savingplot, method = "top.pieces")
install.packages("directlabels")
df  <- data.frame(x = 1, y = 1)
df
select(df, -x)
source('~/Git/MAE3402 Aircraft Specifications/Helper Install Packages.R', echo=TRUE)
select(df, -x)
select(df, -y)
select(df, -z)
6900 * 9.8065
6900/24.5
67664.85/24.5
67664.85/(1/2 * 0.9094 * 81.5^2)
67664.85/(1/2 * 0.9094 * 81.5^2 * 24.5)
sqrt(2/1.225 * 2761.831 * 1/2.8) / 1.3
sqrt(2/1.225 * 2761.831 * 1/2.8) * 1.3
sqrt(2/1.225 * 2761.831 * 1/2.8) * 1.2
sqrt(2/1.225 * 2761.831 * 1/2.8) * 1.3
51.444 /1.3 * 1.2
sqrt(2/1.225 * 2761.831 * 1/2.9) * 1.3
67664.85/(1/2*1.225*51.4444^2 *24.5)
67664.85/(1/2*1.225*51.4444^2 *24.5) * 1.3^2
